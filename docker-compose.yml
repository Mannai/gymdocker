version: "3.8"

services:
  web:
    image: wger/server:latest
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    env_file:
      - ./config/prod.env
    volumes:
      - static:/home/wger/static
      - media:/home/wger/media
    expose:
      - 8000
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8000 || exit 1
      interval: 10s
      timeout: 5s
      start_period: 30s
      retries: 5
    restart: unless-stopped
    networks:
      - docker_network

  nginx:
    image: nginx:stable
    depends_on:
      - web
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static:/wger/static:ro
      - media:/wger/media:ro
    ports:
      - "8565:80"  # External port 8565 â†’ internal nginx port 80
    healthcheck:
      test: nginx -t || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - docker_network

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=wger
      - POSTGRES_PASSWORD=wger
      - POSTGRES_DB=wger
      - TZ=Europe/Berlin
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    expose:
      - 5432
    healthcheck:
      test: pg_isready -U wger || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - docker_network

  cache:
    image: redis
    expose:
      - 6379
    volumes:
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - redis-data:/data
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    healthcheck:
      test: redis-cli ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - docker_network

  celery_worker:
    image: wger/server:latest
    command: /start-worker
    env_file:
      - ./config/prod.env
    volumes:
      - media:/home/wger/media
    depends_on:
      web:
        condition: service_healthy
    healthcheck:
      test: celery -A wger inspect ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - docker_network

  celery_beat:
    image: wger/server:latest
    command: /start-beat
    env_file:
      - ./config/prod.env
    volumes:
      - celery-beat:/home/wger/beat/
    depends_on:
      celery_worker:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - docker_network

volumes:
  postgres-data:
  redis-data:
  media:
  static:
  celery-beat:

networks:
  docker_network:
    external: true
